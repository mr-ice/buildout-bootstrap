buidout-bootstrap - bootstrap python projects with buildout and virtualenv
Copyright (C) 2014 Michael Rice <michael at riceclan dot org>

Buildout has an awesome bootstrap.py that you can
run only if you already have python and a buildout.cfg.

Buildout's bootstrap is available at the following (the former is the
published current bootstrap.py, the latter is the current development
head):
  curl -O http://downloads.buildout.org/2/bootstrap.py
  or
  curl -O https://raw.githubusercontent.com/buildout/buildout/master/bootstrap/bootstrap.py

bootstrap.sh is a script that will generate an initial buildout.cfg and
then download the buildout bootstrap.py and run it for you.

Usage: bootstrap.sh [options]

There are two ways to use bootstrap.sh.  Use this one if you already have
python installed somewhere on your system and you don't want to build a new
one:

bootstrap.sh \
    --use /path/to/bin/python \
    --workdir /path/to/my/projects

Use the following variant if you want to build python from source.  You will
need a working c compiler (gcc recommended) and have a source tarball already
downloaded:

bootstrap.sh \
    --build /path/to/Python.tgz \
    --prefix /path/to/my/projects/.skel
    --workdir /path/to/my/projects

What bootstrap.sh will do for you:

    * make your working directory (where your projects will go 
      WORKON_PATH in the language of virtualenvwrapper)..

    * if you are building python, it will create your $prefix directory
      and a .build inside that, unpack Python, and configure/make/make install
      so that $prefix/bin/python exists and works.

    * download buildout's bootstrap.py (working wget or curl required)

    * create a skeleton buildout.cfg

    * runs bootstrap.py with the python from --use (or the one from --build)

    * runs bin/buildout (created by bootstrap.py)

    * runs bin/virtualenv (installed by bin/buildout)

    * sources bin/activate (created by bin/virtualenv)

    * runs bin/python bootstrap.py (bin/python created by bin/virtualenv)

    * runs bin/bootstrap (re-created by bootstrap with bin/python)

    * TODO - create virtualenvwrapper to shorten the steps for that tool
      initialization to one step (set WORKON_HOME and source
      virtualenvwrapper.sh).  virtualenvwrapper gives you tools like 'workon'
      to list projects you're working on and 'workon project' to switch to the
      project named 'project'

    * TODO - create stub environment files for working with your python projects
      outside of your prefix (just set your path, but that's easiest in a small
      script that can be sourced and already knows the proper paths).

The result will be a self-contained virtualenv based buildout configured
package directory for any of your python projects.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
